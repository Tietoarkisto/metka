Reference:
Reference changed to support multiple types of reference (at the moment MISC, MISC_DEPENDENCY and REVISIONABLE). This includes adding type-attribute, changing targetType to target, changing valueField to valuePath and titleField to titlePath. approvedOnly is moved to being part of field configuration and all reference choices should be collected through ajax from now on. For example the series reference on study should be requested from server after study view has been rendered.

Meaning of valuePath and titlePath change based on reference type.

REVISIONABLE: no need for valuePath since the saved value is always the revisionableId (key.id) of the referenced object. Root object for titlePath is fields (collected from latest revision or latest approved revision depending on the approvedOnly attribute on Field). Example configuration: "series_ref": {"key": "series_ref", "type": "REVISIONABLE", "target": "SERIES", "titlePath": "seriesname"}. When this type of referenced value is saved to RevisionData 

MISC: this configuration is used to reference to contents of MISC_JSON table. Target should be the key of the referenced MISC_JSON. Root object for valuePath and titlePath is the data array in misc json file (should always be present since the file is not saved without it). With example configuration "vocab_ref": {"key": "vocab_ref", "type": "MISC", "target": "VOCABULARY", "valuePath": "codeListID", "titlePath": "codeListName"} selection would be made based on value of codeListID attribute in the JSON objects that are part of the data array in MiscJSON with key VOCABULARY. On the other hand with example configuration "vocab_ref": {"key": "vocab_ref", "type": "MISC", "target": "VOCABULARY", "valuePath": "terms.key", "titlePath": "codeListName"} selection would be made based on the key attribute in the objects in terms array (path navigation should be able to detect when it's targeting an array and when it's targeting an object) of the objects in data array of MiscJSON with key VOCABULARY. In both of these example cases if the targeted field for valuePath is not unique then the actual result of the search can change based on the order of objects in the Json arrays making this somewhat unpredictable unless either there is clear control on how to edit these files or there is a sufficiently advanced editing tool.

MISC_DEPENDENCY: Target-attribute is not required since selection of these values is dependent on another reference field that has to be of type MISC. Both valuePath and titlePath should start with 'f|{field}' meaning that the paths are targeted to the result of the field given in {field}, which should be a JSON object found from the data array using the saved value on {field}. This is assumed to be the nearest field with the given key (mostly a concern in containers where it's assumed to be the field in the same row as the MISC_DEPENDENCY field). Example configuration: "vocab_term_ref": {"key": "vocab_term_ref", "type": "MISC_DEPENDENCY", "valuePath": "f|keywordvocab.terms.key"} would mean that take the json-object found using nearest keywordvocab field data (and that field's reference configuration), then there should be a terms-attribute (which should be identified as an array} and collect all key-attribute values from the objects in that array (also this means that the value actually saved to RevisionData points to that 'key' field and the first match in that array denotes the object used from then on.
There is really no reason why MISC_DEPENDENCY couldn't be recursive but due to the added complexity and search times from that it should be kept to minimum and preferably none.
Util there's a good automation on using MISC and MISC_DEPENDENCY references (as well as the action framework) a separate handler is required for all references on client side and so the definition of these references as well as the f|{field} path variable is usefull only during approval or indexing when reference values need their texts inserted to the data or index rather than functioning only on (unique) keys.

In all situations if titlePath is not given then the title value will be copied from valuePath value
