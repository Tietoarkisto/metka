<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:y="http://www.yworks.com/xml/graphml" xmlns:yed="http://www.yworks.com/xml/yed/3" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd">
  <!--Created by yEd 3.14-->
  <key attr.name="Description" attr.type="string" for="graph" id="d0"/>
  <key for="port" id="d1" yfiles.type="portgraphics"/>
  <key for="port" id="d2" yfiles.type="portgeometry"/>
  <key for="port" id="d3" yfiles.type="portuserdata"/>
  <key attr.name="url" attr.type="string" for="node" id="d4"/>
  <key attr.name="description" attr.type="string" for="node" id="d5"/>
  <key for="node" id="d6" yfiles.type="nodegraphics"/>
  <key for="graphml" id="d7" yfiles.type="resources"/>
  <key attr.name="url" attr.type="string" for="edge" id="d8"/>
  <key attr.name="description" attr.type="string" for="edge" id="d9"/>
  <key for="edge" id="d10" yfiles.type="edgegraphics"/>
  <graph edgedefault="directed" id="G">
    <data key="d0"/>
    <node id="n0">
      <data key="d4"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="238.56880733944968" width="228.86858015267183" x="94.16666666666714" y="669.166743119266"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.1328125" modelName="custom" textColor="#000000" visible="true" width="53.7783203125" x="87.54512992008591" y="3.0">Button<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="-0.03703090122767855" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel>+title : TranslationText
+permissions : Permission [0..*]
+isHandler : Boolean
+hasHandler : Boolean
+isHandledByUser : Field
+customHandler : String</y:AttributeLabel>
            <y:MethodLabel/>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n1">
      <data key="d4"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="286.60685202044976" width="188.0" x="443.2058613659535" y="729.0360957739447"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="34.265625" modelName="custom" textColor="#000000" visible="true" width="141.2998046875" x="23.35009765625" y="3.0">&lt;&lt;enumeration&gt;&gt;
ButtonType<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="-0.03703090122767855" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel>EDIT
SAVE
APPROVE
REMOVE
REMOVE_DRAFT
REMOVE_LOGIC
HISTORY
CLAIM
RELEASE
RESTORE
SEARCH
ADD
RESET
CLEAR
EXPORT_DDI
IMPORT_DDI
CUSTOM</y:AttributeLabel>
            <y:MethodLabel/>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n2">
      <data key="d4"/>
      <data key="d6">
        <y:UMLClassNode>
          <y:Geometry height="91.08256880733961" width="188.0" x="639.8132008154946" y="669.1667431192659"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="34.265625" modelName="custom" textColor="#000000" visible="true" width="141.2998046875" x="23.35009765625" y="3.0">&lt;&lt;enumeration&gt;&gt;
VisibilityState<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="-0.03703090122767855" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="true">
            <y:AttributeLabel>DRAFT
APPROVED
REMOVED</y:AttributeLabel>
            <y:MethodLabel/>
          </y:UML>
        </y:UMLClassNode>
      </data>
    </node>
    <node id="n3">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="160.76697247706431" width="380.71743119266057" x="-302.60458715596326" y="669.1667431192659"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="157.65625" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="376.3984375" x="4.0" y="4.0">Button defines a button input component that is displayed
at the bottom of the view page for this configuration. There is
a common button group where all buttons are placed ordered
from left to right in the order given in the buttons array.
Each button has a distinct function defined by its ButtonType
and there should always be only one button of each type.
Whether the button is added to the DOM or not depends on a
combination of the configured visibility and permissions. Only
buttons that fill all the visibility conditions, state, permission
and handler restriction are added to the DOM and shown by
default. Later code can still modify the visibility further.
</y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <node id="n4">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="1307.6443518453675" width="328.148623853211" x="443.20586136595347" y="1023.582059777026"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="1303.09375" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="325.697265625" x="4.0" y="4.000000000000227">Defines what this button is supposed to do. This is
a list of operations the UI knows how to perform and
which are global to the whole revision being viewed.
All types should only appear once per configuration.

EDIT : Server tries to open a new revision for
    editing. If one is already open then that is used
    instead. User is moved to the draft revision and
    depending if the user is the current handler it is
    shown in editable or non editable mode.

SAVE : Send the currently viewed revision to server
    to be saved. UI doesn't restrict displaying this
    button by default, although the server doesn't do
    anything with save requests that aren't valid so
    configuration should be written with that in mind.

APPROVE : Sends the currently viewed revisio to
    server for approval. This includes a final save
    so the user doesn't have to save the form before
    clicking this button. Again this is not restricted by
    default on the UI but server ignores non valid
    approval calls.

REMOVE : Sends a removal request for the currently
    being viewed revision. Depending on other factors
    this will be either a logical removal or an actual
    removal. Should be used only when there's no
    ambiguity since this can lead to unpredictable
    results with cascade.

REMOVE_DRAFT : Tries to perform draft removal to
    given revision. If the revision is not draft then no
    action is taken.

REMOVE_LOGICAL : Tries to perform logival removal
   to given revision. If there's an open draft then no
    action is taken.

HISTORY : Displays revision history for the currently
    being viewed revisionable. This should function
    no matter what revision the user is looking at so
    it can be configured for all states.

CLAIM : This takes control of a draft from its current
    handler and moves it to the user making this
    request. If these users are the same or there
    is no draft or translation present (only these can
    have handlers) then the server does nothing.

RELEASE: This releases the currently handled
    revision to editing by others. Server checks that
    the user calling the operation is actually the
    current handler before doing this so if displayed
    unnecessarily this button will do nothing.

RESTORE : Returns a logically removed entity back
    to general usage. There are conditions that must
    be met for the server to actually perform this
    operation and the configuration should be written
    with those in mind.

SEARCH : Performs search in a form build for search
    functionality.

ADD : Adds an object (usually revisionable) by calling
    add functionality on server.

RESET : Returns form to the state where it was when
    user arrived to it, usually by just redirecting user
    back to the same revision.

CLEAR : Clears all fields in a form that are editable
    by the user.

EXPORT_DDI : Returns DDI 2.5 formulated xml-file
    containing data from the current revision. Since
    DDI is completely study based standard this
    should not be found from anywhere else than
    study config. User has to select the language
    they want to export in.

IMPORT_DDI : Imports data from DDI 2.5 formulated
    xml-file to the current revision. Certain fields are
    not imported and import language is derived from
    the given xml-file. File must be on the file system
    already and only the path is given.

CUSTOM : Button has custom functionality that can't
    be generalized. Value of customHandler gives the
    js-file that is executed when button is drawn. All
    normal checks can be completed but extra checks
    can be done in the js-file.</y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <node id="n5">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="104.75045871559644" width="328.148623853211" x="639.8132008154946" y="769.1266055045865"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="101.78125" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="322.017578125" x="4.0" y="4.0">DRAFT : Revision must be in DRAFT state.

APPROVED : Revision must be in APPROVED state.

REMOVED : A logical removal has to have been done
    to revisionable currently being viewed revision
    belongs to.</y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <node id="n6">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="707.7190069332593" width="328.148623853211" x="94.16666666666714" y="917.2946165697849"/>
          <y:Fill color="#FFCC00" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="left" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="702.4375" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="329.79296875" x="4.0" y="4.0">title : Text that is shown on the button to the user.
    Since this is a translation text it can be either a
    constant string or translation object.

permissions : List of permissions that the user
    has to have for this button to be shown.
    Permissions are dependent on the role user has
    and higher roles have all the permissions lower
    roles have plus some extra.
    List of permissions can be found from MetkaRole
    implementation.
    This can be left empty in which case the button
    is shown to all users if other restrictions are filled.

isHandler : Defines if user needs to be the handler
    of currently viewed revision to be shown this
    button. This is a three-state boolean where null
    value means that this restriction is not processed
    and the button is shown to everyone, false means
    that the user must not be the handler and true
    means that the user must be the handler.

hasHandler : Defines if there needs to be a handler
    for currently viewed revision for this button to be
    shown. This is a three-state boolean where null
    value means that this restriction is not processed
    and the button is shown to everyone, false means
    that there must not be a handler and true means
    that there has to be a handler.

isHandledByUser : Defines a field key that
    contains a REVISIONABLE reference. This visibility
    restriction makes sure that the most current
    revision of the referenced revisionable is in DRAFT
    state and is handled by the current user. If the
    given field doesn't point to a valid reference then
    this permission is false and button is not visible.
    This is to be consistent with other cases that
    require this information and that can't allow editing
    in the case of uncertain knowledge.

states : List of states in which this button is shown.
    Empty list means that this button is shown always
    if other restrictions are filled.

type : Defines what this button does. There should
    only be one button per type per configuration.

customHandler : Defines the name of the js-file
    that contains handler for CUSTOM-type button.</y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <edge id="e0" source="n0" target="n1">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-15.294193733750422" sy="-19.48090055633088" tx="70.3227645882447" ty="-103.36927555150965"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="17.96875" modelName="six_pos" modelPosition="ttail" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="40.861328125" x="69.1903279186879" y="1.9999703537537243">+type<y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e1" source="n0" target="n2">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="72.08441631958674" sy="-79.41505101504617" tx="-36.99362353321271" ty="-5.671931748991028"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="diamond" target="none"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="17.96875" modelName="six_pos" modelPosition="ttail" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="85.146484375" x="221.51650892096336" y="2.0000239966009303">+states [0..*]<y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e2" source="n3" target="n0">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="25.66358769977843" ty="-38.90091743119274"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e3" source="n1" target="n4">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-70.07431192660545" ty="176.42194804313314"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e4" source="n2" target="n5">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-70.07431192660556" ty="5.130544989356963"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e5" source="n0" target="n6">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-49.64002185026959" ty="45.019476526758886"/>
          <y:LineStyle color="#000000" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
  </graph>
  <data key="d7">
    <y:Resources/>
  </data>
</graphml>
